======================================
General Purpose
======================================

Proper IDisposable Implementation
All IDisposable objects are disposed or returned from method.
Task.WaitAll(), .Result, .Wait(), etc in async method
Equals & GetHashCode operates on different fields/properties
Improper null checks in ==/!= operator overloads
Check for license header at top of file
Non-readonly static fields
Calling parameterless base constructor from deriving class constructor

======================================
iSynaptic.Core Specific
======================================
Only "On" methods should mutate state
Init logic should happen in "Initialize" method
"On" methods should only mutate local state and not call command methods
Aggregates should not make state public
Partial ValueObjects should not add additional fields outside of generated ones
Partial scalar values should only have one field